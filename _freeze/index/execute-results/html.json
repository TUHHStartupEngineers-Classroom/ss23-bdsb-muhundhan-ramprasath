{
  "hash": "a307e99fe5d404ef6d63ec775bb58c35",
  "result": {
    "markdown": "---\ntitle: \"My Lab Journal\"\nsubtitle: \"Business Data Science Basics\"\nauthor: \"Ramprasath Muhundhan\"\n---\n\n\n![](assets/logo/TIE_logo.svg){width=80% fig-align=\"center\"}\n\n-----------------------------------------\n#Sales Analysis, Tidyverse Challenge\n-----------------------------------------\n\n# Libraries\n\nLoad the following libraries. \n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_8da52c51b827104381761b84a6c8733f'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n```\n:::\n\n\n# Import Files\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_0c69052f106a15840d2c8ba2bb9d60a5'}\n\n```{.r .cell-code}\nbikes_tbl <- read_excel(path = \"00_data/01_raw_data/bikes.xlsx\")\norderlines_tbl <- read_excel(\"00_data/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nbikeshops_tbl  <- read_excel(\"00_data/01_raw_data/bikeshops.xlsx\")\n```\n:::\n\n\n#joining data\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_3ec0aefd80f31c83f8ee926f4ada69a2'}\n\n```{.r .cell-code}\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n```\n:::\n\n\n#wrangling data\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_65c9c1ad31281d90287d31dd21ee1711'}\n\n```{.r .cell-code}\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>% \n  separate(col = location, \n           into = c(\"City\",\"State\"),\n           sep = \",\") %>%\n  mutate(total.price = price * quantity) %>%\n  select(-...1,-gender) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>% \n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n```\n:::\n\n\n# Manipulation of data (sales by state)\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_42cd1017d2bd2012eac7a1b36f94aa67'}\n\n```{.r .cell-code}\nlibrary(lubridate)\n\nsales_by_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(State,total_price) %>%\n  group_by(State) %>%\n  summarize(sales = sum(total_price)) %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\nsales_by_state_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   State                               sales sales_text  \n   <chr>                               <dbl> <chr>       \n 1 \" Baden-Württemberg\"              6521090 6.521.090 € \n 2 \" Bavaria\"                        6742819 6.742.819 € \n 3 \" Berlin\"                         1128433 1.128.433 € \n 4 \" Bremen\"                        10653499 10.653.499 €\n 5 \" Hamburg\"                        3874756 3.874.756 € \n 6 \" Hesse\"                          1558901 1.558.901 € \n 7 \" Lower Saxony\"                   4107115 4.107.115 € \n 8 \" Mecklenburg-Western Pomerania\"   618974 618.974 €   \n 9 \" North Rhine-Westphalia\"        21200613 21.200.613 €\n10 \" Saxony\"                         2230245 2.230.245 € \n11 \" Saxony-Anhalt\"                   569614 569.614 €   \n12 \" Schleswig-Holstein\"             3224749 3.224.749 € \n```\n:::\n:::\n\n\n# Visualize sales by state data\n\n\n::: {.cell hash='index_cache/html/plot_c41bf5d1673d87d0bc8aecdf3ac752e7'}\n\n```{.r .cell-code}\nsales_by_state_tbl %>% ggplot(aes(x = State, y =sales)) +\n  geom_col(fill = \"#2DC6D6\") + \n  geom_label(aes(label = sales_text)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by State\",\n    subtitle = \"State wise trend of sales\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=960}\n:::\n:::\n\n\n#Manipulate sales by state and location data\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_d5e7c2b6e8a3d6a821f207e26632db47'}\n\n```{.r .cell-code}\nsales_by_year_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(order_date,total_price,State) %>%\n  mutate(year = year(order_date)) %>%\n  group_by(year,State) %>%\n  summarise(sales = sum(total_price)) %>% \n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsales_by_year_state_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 60 × 4\n    year State                              sales sales_text \n   <dbl> <chr>                              <dbl> <chr>      \n 1  2015 \" Baden-Württemberg\"             1031924 1.031.924 €\n 2  2015 \" Bavaria\"                       1301461 1.301.461 €\n 3  2015 \" Berlin\"                          95853 95.853 €   \n 4  2015 \" Bremen\"                        1395912 1.395.912 €\n 5  2015 \" Hamburg\"                        423090 423.090 €  \n 6  2015 \" Hesse\"                          308609 308.609 €  \n 7  2015 \" Lower Saxony\"                   584386 584.386 €  \n 8  2015 \" Mecklenburg-Western Pomerania\"  222003 222.003 €  \n 9  2015 \" North Rhine-Westphalia\"        3735092 3.735.092 €\n10  2015 \" Saxony\"                         238371 238.371 €  \n# ℹ 50 more rows\n```\n:::\n:::\n\n\n# Visualize sales by state data\n\n\n::: {.cell hash='index_cache/html/plot2_cadec38d22f0da7fc60bb1ab83da21e6'}\n\n```{.r .cell-code}\nsales_by_year_state_tbl %>% ggplot(aes(x = year, y = sales, fill = State)) + \n  geom_col() +\n  facet_wrap(~ State) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\"))+\n  labs(\n    title = \"Revenue by year and state\",\n    subtitle = \"Each state different sales trend\",\n    fill = \"State\" \n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot2-1.png){width=960}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}